{"version":3,"file":"static/js/623.7d1eb25d.chunk.js","mappings":"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","sources":["components/Loader/Loader.js","components/MovieList/MovieList.js","components/SearchForm/SearchForm.styled.js","components/SearchForm/SearchForm.js","pages/Movies.js"],"sourcesContent":["import { ColorRing } from 'react-loader-spinner';\n\nexport const Loader = () => {\n  return (\n    <ColorRing\n      visible={true}\n      height=\"80\"\n      width=\"80\"\n      ariaLabel=\"blocks-loading\"\n      wrapperStyle={{}}\n      wrapperClass=\"blocks-wrapper\"\n      colors={['#e15b64', '#f47e60', '#f8b26a', '#abbd81', '#849b87']}\n    />\n  );\n};\n","import { Link, useLocation } from 'react-router-dom';\n\nconst MovieList = ({ movies, visibleMovies }) => {\n  const location = useLocation();\n\n  return (\n    <ul>\n      {movies.map(movie => (\n        <li key={movie.id}>\n          <Link to={`/movies/${movie.id}`} state={{ from: location }}>\n            {movie.title}\n          </Link>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nexport default MovieList;\n","import styled from 'styled-components';\n\nexport const FormField = styled.form`\n  padding: 20px 20px;\n  background: #b7b7b721;\n`;\n\nexport const FormInput = styled.input`\n  padding: 8px;\n  margin-right: 20px;\n  font: inherit;\n  width: 500px;\n  border: none;\n  box-shadow: 0px 2px 5px 1px #b7b7b7;\n  &:hover,\n  &:focus {\n    outline: none;\n    border-color: #79f7f9;\n    box-shadow: 0 0 10px #79f7f9;\n    transition-duration: 300ms;\n  }\n`;\n\nexport const TextKeyword = styled.p`\n  color: #b7b7b7;\n`;\n","import { FormField, FormInput, TextKeyword } from './SearchForm.styled';\n\nconst SearchForm = ({ query, setSearchParams }) => {\n  const updateQueryString = e => {\n    if (e.target.value === '') {\n      return setSearchParams({});\n    }\n    setSearchParams({ query: e.target.value });\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n  };\n\n  return (\n    <FormField onSubmit={handleSubmit}>\n      <TextKeyword>Search for a movie by keyword</TextKeyword>\n      <FormInput\n        type=\"text\"\n        autoComplete=\"off\"\n        autoFocus\n        name=\"query\"\n        value={query}\n        onChange={updateQueryString}\n      />\n    </FormField>\n  );\n};\n\nexport default SearchForm;\n","import MovieList from 'components/MovieList/MovieList';\nimport SearchForm from 'components/SearchForm/SearchForm';\nimport { useEffect, useState } from 'react';\nimport { fetchMovies } from 'utils/api';\nimport toast from 'react-hot-toast';\nimport { Loader } from 'components/Loader/Loader';\nimport { useSearchParams } from 'react-router-dom';\n\nconst Movies = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [movies, setMovies] = useState([]);\n\n  const [isLoading, setIsLoading] = useState(false);\n\n  const movieId = searchParams.get('query') ?? '';\n\n  useEffect(() => {\n    if (!movieId) {\n      setMovies([]);\n      return;\n    }\n    const loadMovies = async () => {\n      try {\n        setIsLoading(true);\n        const getMovies = await fetchMovies(movieId);\n\n        if (getMovies.length === 0) {\n          toast.error(`Nothing was found for the request \"${movieId}\"`);\n        }\n        setMovies(getMovies);\n      } catch (error) {\n        toast.error('Something went wrong. Try the request again');\n        setIsLoading(false);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    loadMovies();\n  }, [movieId]);\n\n  return (\n    <>\n      <main>\n        <SearchForm setSearchParams={setSearchParams}></SearchForm>\n        {isLoading && <Loader />}\n        {movies && <MovieList movies={movies}></MovieList>}\n      </main>\n    </>\n  );\n};\n\nexport default Movies;\n"],"names":["Loader","_jsx","ColorRing","visible","height","width","ariaLabel","wrapperStyle","wrapperClass","colors","_ref","movies","location","visibleMovies","useLocation","children","map","movie","Link","to","concat","id","state","from","title","FormField","styled","_templateObject","_taggedTemplateLiteral","FormInput","_templateObject2","TextKeyword","_templateObject3","query","setSearchParams","_jsxs","onSubmit","e","preventDefault","type","autoComplete","autoFocus","name","value","onChange","target","_searchParams$get","_useSearchParams","useSearchParams","_useSearchParams2","_slicedToArray","searchParams","_useState","useState","_useState2","setMovies","_useState3","_useState4","isLoading","setIsLoading","movieId","get","useEffect","loadMovies","_asyncToGenerator","_regeneratorRuntime","_callee","getMovies","_context","prev","next","fetchMovies","sent","length","toast","t0","finish","stop","apply","arguments","_Fragment","SearchForm","MovieList"],"sourceRoot":""}